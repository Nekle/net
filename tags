!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.5.4	//
CC	Makefile	/^CC=gcc$/;"	m
CFLAGS	Makefile	/^CFLAGS= -Wall -g -D__DEBUG__$/;"	m
COL_TITLE	net_utils.c	11;"	d	file:
CXX	Makefile	/^CXX=g++$/;"	m
G_LOG_DOMAIN	socket_utils.c	2;"	d	file:
GetLocalIp	net_utils.c	/^ int GetLocalIp(char *eth, char *ipaddr)                                $/;"	f	signature:(char *eth, char *ipaddr)
GetLocalIp	net_utils.h	/^int GetLocalIp(char *eth, char *ipaddr);                                $/;"	p	signature:(char *eth, char *ipaddr)
INC_ALL	Makefile	/^INC_ALL=$/;"	m
LIB_ALL	Makefile	/^LIB_ALL=$/;"	m
LISTENQ	socket_utils.h	18;"	d
MAX_UDPSIZE	socket_utils.h	19;"	d
SU_DEFAULT_LISTEN_PORT	socket_utils.h	11;"	d
SU_DEFAULT_UDP_PORT	socket_utils.h	15;"	d
TARGET	Makefile	/^TARGET= tcp_echo_server tcp_echo_client udp_echo_server udp_echo_client $/;"	m
__NET_COMM_H__	net_comm.h	2;"	d
__NET_UTILS_H__	net_utils.h	2;"	d
__SOCKET_UTILS_H_albert_	socket_utils.h	2;"	d
__TCP_COMM_LIB__	tcp_pro_comm.h	3;"	d
__UDP_SMP_INTERFACE__	udp_pro_comm.h	2;"	d
_connect_tcp	socket_utils.c	/^_connect_tcp(int fd, const struct sockaddr_in *srvp)$/;"	f	file:	signature:(int fd, const struct sockaddr_in *srvp)
_create_tcp_listen	socket_utils.c	/^_create_tcp_listen(const struct sockaddr_in *srvp, int nonblock)$/;"	f	file:	signature:(const struct sockaddr_in *srvp, int nonblock)
_create_udp_listen	socket_utils.c	/^_create_udp_listen(const struct sockaddr_in * srvp, int nonblock)$/;"	f	file:	signature:(const struct sockaddr_in * srvp, int nonblock)
_recvfrom_udp	socket_utils.c	/^_recvfrom_udp(int fd, char *buf, size_t len, int nonblock, const struct sockaddr_in *verify, struct sockaddr_in *from)$/;"	f	file:	signature:(int fd, char *buf, size_t len, int nonblock, const struct sockaddr_in *verify, struct sockaddr_in *from)
_sendto_udp	socket_utils.c	/^_sendto_udp(int fd, const struct sockaddr_in *des, const char * buf, size_t len)$/;"	f	file:	signature:(int fd, const struct sockaddr_in *des, const char * buf, size_t len)
accept_tcp_socket	socket_utils.c	/^accept_tcp_socket(int listenfd, struct sockaddr_in *from, socklen_t *from_len, int nonblock)$/;"	f	signature:(int listenfd, struct sockaddr_in *from, socklen_t *from_len, int nonblock)
accept_tcp_socket	socket_utils.h	/^extern int accept_tcp_socket(int listenfd, struct sockaddr_in *from, socklen_t *from_len, int nonblock);$/;"	p	signature:(int listenfd, struct sockaddr_in *from, socklen_t *from_len, int nonblock)
clear_cork_fd	socket_utils.c	/^clear_cork_fd(int fd)$/;"	f	signature:(int fd)
close_socket	socket_utils.h	21;"	d
close_tcp	socket_utils.c	/^close_tcp(int fd)$/;"	f	signature:(int fd)
close_tcp	socket_utils.h	/^extern int close_tcp(int fd);$/;"	p	signature:(int fd)
connect_tcp_socket	socket_utils.c	/^connect_tcp_socket(int fd, const char * ip, const char * port)$/;"	f	signature:(int fd, const char * ip, const char * port)
connect_tcp_socket	socket_utils.h	/^extern int connect_tcp_socket(int fd, const char *ip, const char *port);$/;"	p	signature:(int fd, const char *ip, const char *port)
connect_tcp_socket_struct	socket_utils.c	/^connect_tcp_socket_struct(int fd, const struct sockaddr_in * srvp)$/;"	f	signature:(int fd, const struct sockaddr_in * srvp)
connect_tcp_socket_struct	socket_utils.h	/^extern int connect_tcp_socket_struct(int fd, const struct sockaddr_in *srvp);$/;"	p	signature:(int fd, const struct sockaddr_in *srvp)
create_tcp_client_socket	socket_utils.c	/^create_tcp_client_socket(void)$/;"	f	signature:(void)
create_tcp_client_socket	socket_utils.h	/^extern int create_tcp_client_socket(void);$/;"	p	signature:(void)
create_tcp_listen_socket	socket_utils.c	/^create_tcp_listen_socket(const char * ip, const char * port, int nonblock)$/;"	f	signature:(const char * ip, const char * port, int nonblock)
create_tcp_listen_socket	socket_utils.h	/^extern int create_tcp_listen_socket(const char *ip, const char *port, int nonblock);$/;"	p	signature:(const char *ip, const char *port, int nonblock)
create_tcp_listen_socket_struct	socket_utils.c	/^create_tcp_listen_socket_struct(const struct sockaddr_in *srvp, int nonblock)$/;"	f	signature:(const struct sockaddr_in *srvp, int nonblock)
create_tcp_listen_socket_struct	socket_utils.h	/^extern int create_tcp_listen_socket_struct(const struct sockaddr_in *srv, int nonblock);$/;"	p	signature:(const struct sockaddr_in *srv, int nonblock)
create_udp_client_socket	socket_utils.c	/^create_udp_client_socket(void)$/;"	f	signature:(void)
create_udp_client_socket	socket_utils.h	/^extern int create_udp_client_socket(void);$/;"	p	signature:(void)
create_udp_listen_socket	socket_utils.c	/^create_udp_listen_socket(const char *ip, const char *port, int nonblock)$/;"	f	signature:(const char *ip, const char *port, int nonblock)
create_udp_listen_socket	socket_utils.h	/^extern int create_udp_listen_socket(const char *ip, const char *port, int nonblock);$/;"	p	signature:(const char *ip, const char *port, int nonblock)
create_udp_listen_socket_struct	socket_utils.c	/^create_udp_listen_socket_struct(const struct sockaddr_in * srvp, int nonblock)$/;"	f	signature:(const struct sockaddr_in * srvp, int nonblock)
create_udp_listen_socket_struct	socket_utils.h	/^extern int create_udp_listen_socket_struct(const struct sockaddr_in *srv, int nonblock);$/;"	p	signature:(const struct sockaddr_in *srv, int nonblock)
get_addr_from_device	socket_utils.c	/^get_addr_from_device(const char *device_name, in_addr_t *addrp)$/;"	f	signature:(const char *device_name, in_addr_t *addrp)
get_addr_from_device	socket_utils.h	/^extern int get_addr_from_device(const char *device_name, in_addr_t *addrp);$/;"	p	signature:(const char *device_name, in_addr_t *addrp)
get_recvbuf_size	socket_utils.c	/^get_recvbuf_size(int sockfd, uint32_t *len)$/;"	f	signature:(int sockfd, uint32_t *len)
get_recvbuf_size	socket_utils.h	/^extern int get_recvbuf_size(int sockfd, uint32_t *len);$/;"	p	signature:(int sockfd, uint32_t *len)
get_sendbuf_size	socket_utils.c	/^get_sendbuf_size(int sockfd, uint32_t *len)$/;"	f	signature:(int sockfd, uint32_t *len)
get_sendbuf_size	socket_utils.h	/^extern int get_sendbuf_size(int sockfd, uint32_t *len);$/;"	p	signature:(int sockfd, uint32_t *len)
main	tcp_echo_client.c	/^int main(int argc, char *argv[]){$/;"	f	signature:(int argc, char *argv[])
main	tcp_echo_server.c	/^int main(int argc, char *argv[]){$/;"	f	signature:(int argc, char *argv[])
main	udp_echo_client.c	/^int main(int argc, char *argv[]){$/;"	f	signature:(int argc, char *argv[])
main	udp_echo_server.c	/^int main(int argc, char *argv[]){$/;"	f	signature:(int argc, char *argv[])
net_create_sock	net_comm.c	/^int net_create_sock(int domain, int type)$/;"	f	signature:(int domain, int type)
net_create_sock	net_comm.h	/^int net_create_sock(int domain, int type);$/;"	p	signature:(int domain, int type)
net_set_sock_rcv_utimeout	net_comm.h	/^int net_set_sock_rcv_utimeout(int fd, int utimeout);$/;"	p	signature:(int fd, int utimeout)
net_set_sock_snd_utimeout	net_comm.h	/^int net_set_sock_snd_utimeout(int fd, int utimeout);$/;"	p	signature:(int fd, int utimeout)
net_set_sock_utimeout	net_comm.h	/^int net_set_sock_utimeout(int fd, int utimeout, int type);$/;"	p	signature:(int fd, int utimeout, int type)
net_sock_bind	net_comm.c	/^int net_sock_bind(int fd, const char *ip, int port)  $/;"	f	signature:(int fd, const char *ip, int port)
net_sock_bind	net_comm.h	/^int net_sock_bind(int fd, const char *ip, int port) ;$/;"	p	signature:(int fd, const char *ip, int port)
net_sock_connect	net_comm.c	/^int net_sock_connect(int fd, const char *ip, int port)          $/;"	f	signature:(int fd, const char *ip, int port)
net_sock_connect	net_comm.h	/^int net_sock_connect(int fd, const char *ip, int port);$/;"	p	signature:(int fd, const char *ip, int port)
net_sock_get_buffer	net_comm.c	/^int net_sock_get_buffer(int fd, long *buflen, int type)$/;"	f	signature:(int fd, long *buflen, int type)
net_sock_get_buffer	net_comm.h	/^int net_sock_get_buffer(int fd, long *buflen, int type);$/;"	p	signature:(int fd, long *buflen, int type)
net_sock_get_eth_ip	net_comm.c	/^int net_sock_get_eth_ip(const char *eth, char *ip)$/;"	f	signature:(const char *eth, char *ip)
net_sock_get_eth_ip	net_comm.h	/^int net_sock_get_eth_ip(const char *eth, char *ip);$/;"	p	signature:(const char *eth, char *ip)
net_sock_get_rcvbuffer	net_comm.c	/^int net_sock_get_rcvbuffer(int fd, long *buflen)$/;"	f	signature:(int fd, long *buflen)
net_sock_get_rcvbuffer	net_comm.h	/^int net_sock_get_rcvbuffer(int fd, long *buflen);$/;"	p	signature:(int fd, long *buflen)
net_sock_get_sndbuffer	net_comm.c	/^int net_sock_get_sndbuffer(int fd, long *buflen)$/;"	f	signature:(int fd, long *buflen)
net_sock_get_sndbuffer	net_comm.h	/^int net_sock_get_sndbuffer(int fd, long *buflen);$/;"	p	signature:(int fd, long *buflen)
net_sock_get_socket_ip	net_comm.c	/^int net_sock_get_socket_ip(int fd, const char *eth, char *ip)$/;"	f	signature:(int fd, const char *eth, char *ip)
net_sock_get_socket_ip	net_comm.h	/^int net_sock_get_socket_ip(int fd, const char* eth, char *ip);$/;"	p	signature:(int fd, const char* eth, char *ip)
net_sock_one_recv	net_comm.c	/^int net_sock_one_recv(int fd, char *data, int len)$/;"	f	signature:(int fd, char *data, int len)
net_sock_one_recv	net_comm.h	/^int net_sock_one_recv(int fd, char *data, int len);$/;"	p	signature:(int fd, char *data, int len)
net_sock_one_send	net_comm.c	/^int net_sock_one_send(int fd, char *data, int len)$/;"	f	signature:(int fd, char *data, int len)
net_sock_one_send	net_comm.h	/^int net_sock_one_send(int fd, char *data, int len);$/;"	p	signature:(int fd, char *data, int len)
net_sock_sendrecv	net_comm.c	/^int net_sock_sendrecv(int fd, char *sdata, int slen, char *rdata, int *rlen, int utimeout)$/;"	f	signature:(int fd, char *sdata, int slen, char *rdata, int *rlen, int utimeout)
net_sock_sendrecv	net_comm.h	/^int net_sock_sendrecv(int fd, char *sdata, int slen, char *rdata, int *rlen, $/;"	p	signature:(int fd, char *sdata, int slen, char *rdata, int *rlen, int utimeout)
net_sock_set_buffer	net_comm.c	/^int net_sock_set_buffer(int fd, long buflen, int type)$/;"	f	signature:(int fd, long buflen, int type)
net_sock_set_buffer	net_comm.h	/^int net_sock_set_buffer( int fd, long buflen, int type);$/;"	p	signature:( int fd, long buflen, int type)
net_sock_set_nonblock	net_comm.c	/^int net_sock_set_nonblock(int fd)$/;"	f	signature:(int fd)
net_sock_set_nonblock	net_comm.h	/^int net_sock_set_nonblock( int fd);$/;"	p	signature:( int fd)
net_sock_set_rcv_utimeout	net_comm.c	/^int net_sock_set_rcv_utimeout(int fd, int utimeout)$/;"	f	signature:(int fd, int utimeout)
net_sock_set_rcvbuffer	net_comm.c	/^int net_sock_set_rcvbuffer(int fd, long buflen){$/;"	f	signature:(int fd, long buflen)
net_sock_set_rcvbuffer	net_comm.h	/^int net_sock_set_rcvbuffer( int fd, long buflen);$/;"	p	signature:( int fd, long buflen)
net_sock_set_snd_utimeout	net_comm.c	/^int net_sock_set_snd_utimeout(int fd, int utimeout)$/;"	f	signature:(int fd, int utimeout)
net_sock_set_sndbuffer	net_comm.c	/^int net_sock_set_sndbuffer(int fd, long buflen){$/;"	f	signature:(int fd, long buflen)
net_sock_set_sndbuffer	net_comm.h	/^int net_sock_set_sndbuffer( int fd, long buflen);$/;"	p	signature:( int fd, long buflen)
net_sock_set_utimeout	net_comm.c	/^int net_sock_set_utimeout(int fd, int utimeout, int type)$/;"	f	signature:(int fd, int utimeout, int type)
net_sock_timeout_recv	net_comm.c	/^int net_sock_timeout_recv(int fd, char *rdata, int *rlen, int utimeout){$/;"	f	signature:(int fd, char *rdata, int *rlen, int utimeout)
net_sock_timeout_recv	net_comm.h	/^int net_sock_timeout_recv(int fd, char *rdata, int *rlen, int utimeout);$/;"	p	signature:(int fd, char *rdata, int *rlen, int utimeout)
pperror	net_comm.h	10;"	d
pperror	net_comm.h	5;"	d
print_mem	socket_utils.c	/^print_mem(unsigned char* buf, int len, int show)$/;"	f	signature:(unsigned char* buf, int len, int show)
print_mem	socket_utils.h	/^extern void print_mem(unsigned char* buf, int len, int show);$/;"	p	signature:(unsigned char* buf, int len, int show)
recv_tcp_data	socket_utils.c	/^recv_tcp_data(int fd, void *buf, size_t buflen)$/;"	f	signature:(int fd, void *buf, size_t buflen)
recv_tcp_data	socket_utils.h	/^extern int recv_tcp_data(int fd, void *buf, size_t buflen);$/;"	p	signature:(int fd, void *buf, size_t buflen)
recv_tcp_data_n	socket_utils.c	/^recv_tcp_data_n(int fd, void *buf, size_t wantlen)$/;"	f	signature:(int fd, void *buf, size_t wantlen)
recv_tcp_data_n	socket_utils.h	/^extern int recv_tcp_data_n(int fd, void *buf, size_t wantlen);$/;"	p	signature:(int fd, void *buf, size_t wantlen)
recv_udp_data	socket_utils.c	/^recv_udp_data(int fd, const char *ip, const char *port, char *buf, size_t len, int nonblock, int verify, struct sockaddr_in *from)$/;"	f	signature:(int fd, const char *ip, const char *port, char *buf, size_t len, int nonblock, int verify, struct sockaddr_in *from)
recv_udp_data	socket_utils.h	/^extern int recv_udp_data(int fd, const char *ip, const char *port, char *buf, size_t len, int nonblock, int verify, struct sockaddr_in *from);$/;"	p	signature:(int fd, const char *ip, const char *port, char *buf, size_t len, int nonblock, int verify, struct sockaddr_in *from)
recv_udp_data_struct	socket_utils.c	/^recv_udp_data_struct(int fd, const struct sockaddr_in *ver, char * buf, size_t len, int nonblock, int verify, struct sockaddr_in * from)$/;"	f	signature:(int fd, const struct sockaddr_in *ver, char * buf, size_t len, int nonblock, int verify, struct sockaddr_in * from)
recv_udp_data_struct	socket_utils.h	/^extern int recv_udp_data_struct(int fd, const struct sockaddr_in *ver, char *buf, size_t len, int nonblock, int verify, struct sockaddr_in *from);$/;"	p	signature:(int fd, const struct sockaddr_in *ver, char *buf, size_t len, int nonblock, int verify, struct sockaddr_in *from)
reuse_addr	socket_utils.c	/^reuse_addr(int sockfd)$/;"	f	signature:(int sockfd)
reuse_addr	socket_utils.h	/^extern int reuse_addr(int sockfd);$/;"	p	signature:(int sockfd)
send_tcp_data	socket_utils.c	/^send_tcp_data(int fd, void *buf, size_t len, int no_sigpipe)$/;"	f	signature:(int fd, void *buf, size_t len, int no_sigpipe)
send_tcp_data	socket_utils.h	/^extern int send_tcp_data(int fd, void *buf, size_t len, int no_sigpipe);$/;"	p	signature:(int fd, void *buf, size_t len, int no_sigpipe)
send_tcp_data_n	socket_utils.c	/^send_tcp_data_n(int fd, void *buf, size_t len, int no_sigpipe)$/;"	f	signature:(int fd, void *buf, size_t len, int no_sigpipe)
send_tcp_data_n	socket_utils.h	/^extern int send_tcp_data_n(int fd, void *buf, size_t len, int no_sigpipe);$/;"	p	signature:(int fd, void *buf, size_t len, int no_sigpipe)
send_udp_data	socket_utils.c	/^send_udp_data(int fd, const char *ip, const char *port, const char *buf, size_t len)$/;"	f	signature:(int fd, const char *ip, const char *port, const char *buf, size_t len)
send_udp_data	socket_utils.h	/^extern int send_udp_data(int fd, const char *ip, const char *port, const char *buf, size_t len);$/;"	p	signature:(int fd, const char *ip, const char *port, const char *buf, size_t len)
send_udp_data_struct	socket_utils.c	/^send_udp_data_struct(int fd, const struct sockaddr_in *des, const char * buf, size_t len)$/;"	f	signature:(int fd, const struct sockaddr_in *des, const char * buf, size_t len)
send_udp_data_struct	socket_utils.h	/^extern int send_udp_data_struct(int fd, const struct sockaddr_in *des, const char *buf, size_t len);$/;"	p	signature:(int fd, const struct sockaddr_in *des, const char *buf, size_t len)
set_block_fd	socket_utils.c	/^set_block_fd(int fd)$/;"	f	signature:(int fd)
set_block_fd	socket_utils.h	/^extern int set_block_fd(int fd);$/;"	p	signature:(int fd)
set_cork_fd	socket_utils.c	/^set_cork_fd(int fd)$/;"	f	signature:(int fd)
set_cork_fd	socket_utils.h	/^extern int set_cork_fd(int fd);$/;"	p	signature:(int fd)
set_no_tw	socket_utils.c	/^set_no_tw(int sockfd)$/;"	f	signature:(int sockfd)
set_no_tw	socket_utils.h	/^extern int set_no_tw(int sockfd);$/;"	p	signature:(int sockfd)
set_nodelay_fd	socket_utils.c	/^set_nodelay_fd(int fd)$/;"	f	signature:(int fd)
set_nodelay_fd	socket_utils.h	/^extern int set_nodelay_fd(int fd);$/;"	p	signature:(int fd)
set_nonblock_fd	socket_utils.c	/^set_nonblock_fd(int fd)$/;"	f	signature:(int fd)
set_nonblock_fd	socket_utils.h	/^extern int set_nonblock_fd(int fd);$/;"	p	signature:(int fd)
set_recv_timeout	socket_utils.c	/^set_recv_timeout(int sockfd, uint32_t timeout)$/;"	f	signature:(int sockfd, uint32_t timeout)
set_recv_timeout	socket_utils.h	/^extern int set_recv_timeout(int sockfd, uint32_t timeout);$/;"	p	signature:(int sockfd, uint32_t timeout)
set_recv_timeout_micro	socket_utils.c	/^set_recv_timeout_micro(int sockfd, uint32_t micro)$/;"	f	signature:(int sockfd, uint32_t micro)
set_recv_timeout_micro	socket_utils.h	/^extern int set_recv_timeout_micro(int sockfd, uint32_t micro);$/;"	p	signature:(int sockfd, uint32_t micro)
set_recvbuf_size	socket_utils.c	/^set_recvbuf_size(int sockfd, uint32_t len)$/;"	f	signature:(int sockfd, uint32_t len)
set_recvbuf_size	socket_utils.h	/^extern int set_recvbuf_size(int sockfd, uint32_t len);$/;"	p	signature:(int sockfd, uint32_t len)
set_send_timeout_micro	socket_utils.c	/^set_send_timeout_micro(int sockfd, uint32_t micro)$/;"	f	signature:(int sockfd, uint32_t micro)
set_send_timeout_micro	socket_utils.h	/^extern int set_send_timeout_micro(int sockfd, uint32_t micro);$/;"	p	signature:(int sockfd, uint32_t micro)
set_sendbuf_size	socket_utils.c	/^set_sendbuf_size(int sockfd, uint32_t len)$/;"	f	signature:(int sockfd, uint32_t len)
set_sendbuf_size	socket_utils.h	/^extern int set_sendbuf_size(int sockfd, uint32_t len);$/;"	p	signature:(int sockfd, uint32_t len)
tcp_create_and_connect	tcp_pro_comm.c	/^int tcp_create_and_connect(const char *ip, int port)$/;"	f	signature:(const char *ip, int port)
tcp_create_and_connect	tcp_pro_comm.h	/^int tcp_create_and_connect(const char *ip, int port);$/;"	p	signature:(const char *ip, int port)
tcp_create_and_listen	tcp_pro_comm.c	/^int tcp_create_and_listen(const char *ip, int port, int backlog)$/;"	f	signature:(const char *ip, int port, int backlog)
tcp_create_and_listen	tcp_pro_comm.h	/^int tcp_create_and_listen(const char *ip, int port, int backlog);$/;"	p	signature:(const char *ip, int port, int backlog)
tcp_create_nonblock_sock	tcp_pro_comm.c	/^int tcp_create_nonblock_sock()$/;"	f
tcp_create_nonblock_sock	tcp_pro_comm.h	/^int tcp_create_nonblock_sock();$/;"	p	signature:()
tcp_create_sock	tcp_pro_comm.c	/^int tcp_create_sock()$/;"	f
tcp_create_sock	tcp_pro_comm.h	/^int tcp_create_sock();$/;"	p	signature:()
tcp_sock_accept	tcp_pro_comm.c	/^int tcp_sock_accept(int fd, void * addr){$/;"	f	signature:(int fd, void * addr)
tcp_sock_accept	tcp_pro_comm.h	/^int tcp_sock_accept(int fd, void * addr);$/;"	p	signature:(int fd, void * addr)
tcp_sock_bind	tcp_pro_comm.c	/^int tcp_sock_bind(int fd, const char *ip, int port){$/;"	f	signature:(int fd, const char *ip, int port)
tcp_sock_bind	tcp_pro_comm.h	/^int tcp_sock_bind(int fd, const char *ip, int port);$/;"	p	signature:(int fd, const char *ip, int port)
tcp_sock_connect	tcp_pro_comm.c	/^int tcp_sock_connect(int fd, const char *ip, int port){$/;"	f	signature:(int fd, const char *ip, int port)
tcp_sock_connect	tcp_pro_comm.h	/^int tcp_sock_connect(int fd, const char *ip, int port);$/;"	p	signature:(int fd, const char *ip, int port)
tcp_sock_listen	tcp_pro_comm.c	/^int tcp_sock_listen(const int fd, int backlog)$/;"	f	signature:(const int fd, int backlog)
tcp_sock_listen	tcp_pro_comm.h	/^int tcp_sock_listen(int fd, int backlog);$/;"	p	signature:(int fd, int backlog)
tcp_sock_nrecv	tcp_pro_comm.c	/^int tcp_sock_nrecv(const int fd, char *data, int len)$/;"	f	signature:(const int fd, char *data, int len)
tcp_sock_nrecv	tcp_pro_comm.h	/^int tcp_sock_nrecv(int fd, char *data, int len);$/;"	p	signature:(int fd, char *data, int len)
tcp_sock_nsend	tcp_pro_comm.c	/^int tcp_sock_nsend(const int fd, const char *data, const int len)$/;"	f	signature:(const int fd, const char *data, const int len)
tcp_sock_nsend	tcp_pro_comm.h	/^int tcp_sock_nsend(int fd, const char *data, int len);$/;"	p	signature:(int fd, const char *data, int len)
tcp_sock_timeout_recv	tcp_pro_comm.c	/^int tcp_sock_timeout_recv(int fd, char *data, int *len, int utimeout){$/;"	f	signature:(int fd, char *data, int *len, int utimeout)
tcp_sock_timeout_recv	tcp_pro_comm.h	/^int tcp_sock_timeout_recv(int fd, char *data, int *len, int utimeout);$/;"	p	signature:(int fd, char *data, int *len, int utimeout)
udp_addr_sendrecv	udp_pro_comm.c	/^int udp_addr_sendrecv(const char *ip, int port, const char *sdata, int slen, char *rdata, int *rlen, $/;"	f	signature:(const char *ip, int port, const char *sdata, int slen, char *rdata, int *rlen, int utimeout)
udp_addr_sendrecv	udp_pro_comm.h	/^int udp_addr_sendrecv(const char *ip, int port, const char *sdata, int slen, char *rdata, int *rlen, int utimeout);$/;"	p	signature:(const char *ip, int port, const char *sdata, int slen, char *rdata, int *rlen, int utimeout)
udp_create_and_bind	udp_pro_comm.c	/^int udp_create_and_bind(const char *ip,  int port)$/;"	f	signature:(const char *ip, int port)
udp_create_and_bind	udp_pro_comm.h	/^int udp_create_and_bind(const char *ip,  int port);$/;"	p	signature:(const char *ip, int port)
udp_create_and_connect	udp_pro_comm.c	/^int udp_create_and_connect(const char *ip, int port)$/;"	f	signature:(const char *ip, int port)
udp_create_and_connect	udp_pro_comm.h	/^int udp_create_and_connect(const char *ip, int port);$/;"	p	signature:(const char *ip, int port)
udp_create_nonblock_sock	udp_pro_comm.c	/^int udp_create_nonblock_sock()$/;"	f
udp_create_nonblock_sock	udp_pro_comm.h	/^int udp_create_nonblock_sock();$/;"	p	signature:()
udp_create_sock	udp_pro_comm.c	/^int udp_create_sock()$/;"	f
udp_create_sock	udp_pro_comm.h	/^int udp_create_sock();$/;"	p	signature:()
udp_sock_bind	udp_pro_comm.c	/^int udp_sock_bind(int fd, const char* ip, int port)$/;"	f	signature:(int fd, const char* ip, int port)
udp_sock_bind	udp_pro_comm.h	/^int udp_sock_bind(int fd, const char *ip, int port);$/;"	p	signature:(int fd, const char *ip, int port)
udp_sock_connect	udp_pro_comm.c	/^int udp_sock_connect(int fd, const char *ip, int port){$/;"	f	signature:(int fd, const char *ip, int port)
udp_sock_connect	udp_pro_comm.h	/^int udp_sock_connect(int fd, const char *ip, int port);$/;"	p	signature:(int fd, const char *ip, int port)
udp_sock_recvfrom	udp_pro_comm.c	/^int udp_sock_recvfrom(int fd, char *data, int len, int *ip, int *port)$/;"	f	signature:(int fd, char *data, int len, int *ip, int *port)
udp_sock_recvfrom	udp_pro_comm.h	/^int udp_sock_recvfrom(int fd, char *data, int len, int *ip, int *port);$/;"	p	signature:(int fd, char *data, int len, int *ip, int *port)
udp_sock_sendrecv	udp_pro_comm.c	/^int udp_sock_sendrecv(int fd, const char *sdata, int slen, char *rdata, int *rlen, int utimeout)$/;"	f	signature:(int fd, const char *sdata, int slen, char *rdata, int *rlen, int utimeout)
udp_sock_sendrecv	udp_pro_comm.h	/^int udp_sock_sendrecv(int socket, const char *sdata, int slen, char *rdata, int *rlen, int utimeout);$/;"	p	signature:(int socket, const char *sdata, int slen, char *rdata, int *rlen, int utimeout)
udp_sock_sendto	udp_pro_comm.c	/^int udp_sock_sendto(int fd, const char *data, int len, const char *ip,  int port)$/;"	f	signature:(int fd, const char *data, int len, const char *ip, int port)
udp_sock_sendto	udp_pro_comm.h	/^int udp_sock_sendto(int fd, const char *data, int len, const char *ip,  int port);$/;"	p	signature:(int fd, const char *data, int len, const char *ip, int port)
utils_net_Net2Addr	net_utils.c	/^char *utils_net_Net2Addr( uint32_t dwIp)$/;"	f	signature:( uint32_t dwIp)
utils_net_Net2Addr	net_utils.h	/^char *utils_net_Net2Addr( uint32_t dwIp);$/;"	p	signature:( uint32_t dwIp)
utils_str_Dump2File	net_utils.c	/^void utils_str_Dump2File(char acInBuf[], int iInBufLen, FILE *out){$/;"	f	signature:(char acInBuf[], int iInBufLen, FILE *out)
utils_str_Dump2File	net_utils.h	/^void utils_str_Dump2File(char acInBuf[], int iInBufLen, FILE *out);$/;"	p	signature:(char acInBuf[], int iInBufLen, FILE *out)
utils_str_Hex2Str	net_utils.c	/^int utils_str_Hex2Str(const char* pInBuff,  int iInLen, char* pOutBuff, int *piOutLen)$/;"	f	signature:(const char* pInBuff, int iInLen, char* pOutBuff, int *piOutLen)
utils_str_Hex2Str	net_utils.h	/^int utils_str_Hex2Str(const char* pInBuff,  int iInLen, char* pOutBuff, int *piOutLen);$/;"	p	signature:(const char* pInBuff, int iInLen, char* pOutBuff, int *piOutLen)
utils_str_HexDumpStr	net_utils.c	/^int utils_str_HexDumpStr(const char *pInData,  int iInSize, char *pOutData, int *piInOutLen)$/;"	f	signature:(const char *pInData, int iInSize, char *pOutData, int *piInOutLen)
utils_str_HexDumpStr	net_utils.h	/^int utils_str_HexDumpStr(const char *pInData,  int iInSize, char *pOutData, int *piInOutLen);$/;"	p	signature:(const char *pInData, int iInSize, char *pOutData, int *piInOutLen)
utils_str_Str2Hex	net_utils.c	/^int utils_str_Str2Hex(const char* pInBuff,  int iInLen, char* pOutBuff, int *piOutLen)$/;"	f	signature:(const char* pInBuff, int iInLen, char* pOutBuff, int *piOutLen)
utils_str_Str2Hex	net_utils.h	/^int utils_str_Str2Hex(const char* pInBuff,  int iInLen, char* pOutBuff, int *piOutLen);$/;"	p	signature:(const char* pInBuff, int iInLen, char* pOutBuff, int *piOutLen)
